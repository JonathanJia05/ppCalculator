name: Build and Deploy

on:
  push:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: ./backend
          file: ./backend/Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/ppcalculatorbackend:latest
          platforms: linux/arm64

      - name: Deploy to EC2
        env:
          SSH_KEY: ${{ secrets.EC2_SSH_KEY }}
          EC2_IP: ${{ secrets.EC2_PUBLIC_IP }}
        run: |
          echo "$SSH_KEY" > key.pem
          chmod 600 key.pem

          ssh -o StrictHostKeyChecking=no -i key.pem ec2-user@${EC2_IP:-YOUR_EC2_PUBLIC_IP} <<EOF
          mkdir -p /home/ec2-user/config

          echo "[postgresql]" > /home/ec2-user/config/database.ini
          echo "host=postgres-db" >> /home/ec2-user/config/database.ini
          echo "database=osudb" >> /home/ec2-user/config/database.ini
          echo "user=postgres" >> /home/ec2-user/config/database.ini
          echo "password=${{ secrets.DB_PASSWORD }}" >> /home/ec2-user/config/database.ini

          echo "CLIENT_ID=${{ secrets.CLIENT_ID }}" > /home/ec2-user/config/.env
          echo "CLIENT_SECRET=${{ secrets.CLIENT_SECRET }}" >> /home/ec2-user/config/.env
          echo "EMAIL_FROM=${{ secrets.EMAIL_FROM }}" >> /home/ec2-user/config/.env
          echo "EMAIL_TO=${{ secrets.EMAIL_TO }}" >> /home/ec2-user/config/.env
          echo "SMTP_SERVER=${{ secrets.SMTP_SERVER }}" >> /home/ec2-user/config/.env
          echo "SMTP_PORT=${{ secrets.SMTP_PORT }}" >> /home/ec2-user/config/.env
          echo "SMTP_USER=${{ secrets.SMTP_USER }}" >> /home/ec2-user/config/.env
          echo "SMTP_PASSWORD=${{ secrets.SMTP_PASSWORD }}" >> /home/ec2-user/config/.env
          echo "SECRET_KEY=${{ secrets.SECRET_KEY }}" >> /home/ec2-user/config/.env
          echo "ALGORITHM=${{ secrets.ALGORITHM }}" >> /home/ec2-user/config/.env
          echo "ACCESS_TOKEN_EXPIRE_MINUTES=${{ secrets.ACCESS_TOKEN_EXPIRE_MINUTES }}" >> /home/ec2-user/config/.env
          echo "VALID_CLIENT_ID=${{ secrets.VALID_CLIENT_ID }}" >> /home/ec2-user/config/.env
          echo "REDIS_HOST=${{ secrets.REDIS_HOST }}" >> /home/ec2-user/config/.env
          echo "REDIS_PORT=${{ secrets.REDIS_PORT }}" >> /home/ec2-user/config/.env

          docker login --username ${{ secrets.DOCKER_USERNAME }} --password ${{ secrets.DOCKER_PASSWORD }}

          docker pull ${{ secrets.DOCKER_USERNAME }}/ppcalculatorbackend:latest

          docker stop ppcalculatorbackend || true
          docker rm ppcalculatorbackend || true

          docker run -d --name ppcalculatorbackend --network my-network -p 8000:8000 --env-file /home/ec2-user/config/.env -v /home/ec2-user/config/database.ini:/app/database.ini ${{ secrets.DOCKER_USERNAME }}/ppcalculatorbackend:latest
          EOF
